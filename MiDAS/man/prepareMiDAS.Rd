% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MiDAS_stats.R
\name{prepareMiDAS}
\alias{prepareMiDAS}
\title{Prepare MiDAS data for statistical analysis}
\usage{
prepareMiDAS(hla_calls, ..., kir_counts = NULL,
  analysis_type = c("hla_allele", "aa_level", "expression_level",
  "allele_g_group", "allele_supertype", "allele_group", "kir_genes",
  "hla_kir_interactions", "hla_grantham_dist", "custom"),
  inheritance_model = "additive", placeholder = "term",
  indels = TRUE, unkchar = FALSE)
}
\arguments{
\item{hla_calls}{Data frame containing HLA allele calls, as return by
\code{\link{readHlaCalls}} function.}

\item{...}{Data frames holding additional variables like phenotypic
observations or covariates.}

\item{kir_counts}{Data frame with KIR genes counts. Required for
\code{"kir_genes"} analysis type.}

\item{analysis_type}{Character vector indicating analysis type for which data
should be prepared. Valid choices are \code{"hla_allele"},
\code{"aa_level"}, \code{"expression_level"}, \code{"allele_group"},
\code{"hla_grantham_dist"}, \code{"custom"}. Each prepared variable will
be labeled with corresponding
\code{analysis_type}. See details for further explanations.}

\item{inheritance_model}{String specifying inheritance model to use.
Available choices are \code{"dominant"}, \code{"recessive"},
\code{"additive"}. In \code{"dominant"} model homozygotes and heterozygotes
are coded as \code{1}. In \code{"recessive"} model homozygotes are coded as
\code{1} and all other as \code{0}. In \code{"additive"} model homozygotes
are coded as \code{2} and heterozygotes as \code{1}.}

\item{placeholder}{String specifying name of dummy column added to result
data frame.}

\item{indels}{Logical indicating whether indels should be considered when
checking variability.}

\item{unkchar}{Logical indicating whether unknown characters in the alignment
should be considered when checking variability.}
}
\value{
Data frame containing prepared data.
}
\description{
\code{prepareMiDAS} transform HLA alleles calls and KIR calls according
to selected analysis type and join obtained transformation with additional
data like phenotypic observations or covariates.
}
\details{
Data frames passed as arguments to the function are joined using
\code{hla_calls} as a reference. As a consequence all samples with HLA data
are kept, independent of whether there's actually phenotypes / covariates.
Moreover phenotypes / covariates without HLA data are discarded.

\code{...} should be data frames with first column holding sample IDs and
named \code{ID}. Those should correspond to \code{ID} column in
\code{hla_calls} and \code{kir_counts}.

Choices for \code{analysis_type}:
\describe{
  \item{\code{hla_allele}}{
    \code{hla_calls} are transformed into counts under
    \code{inheritance_model} of choice (see \code{\link{hlaCallsToCounts}}
    for more details).
  }
  \item{\code{aa_level}}{
    \code{hla_calls} are first converted to amino acid level, taking only
    variable positions under consideration. Than variable amino acid
    positions are transformed to counts under \code{inheritance_model} of
    choice (see \code{\link{hlaToAAVariation}} and
    \code{\link{aaVariationToCounts}} for more details).
  }
  \item{\code{expression_level}}{
    \code{hla_calls} are transformed to expression levels using expression
    dictionaries shipped with package (see \code{\link{hlaToVariable}} for
    more details). Expression levels from both alleles are summed into single
    variable for each HLA gene.
  }
  \item{\code{allele_g_group}}{
    \code{hla_calls} are transformed to HLA alleles groups using G group
    dictionary shipped with the package. Than they are transformed to counts
    under \code{inheritance_model} of choice (see \code{\link{hlaToVariable}}
    and \code{\link{hlaCallsToCounts}} for more details).
  }
. \item{\code{allele_supertype}}{
    \code{hla_calls} are transformed to HLA alleles groups using supertypes
    dictionary shipped with the package. Than they are transformed to counts
    under \code{inheritance_model} of choice (see \code{\link{hlaToVariable}}
    and \code{\link{hlaCallsToCounts}} for more details).
  }
  \item{\code{allele_group}}{
    \code{hla_calls} are transformed to HLA alleles groups using Bw4/6, C1/2
    and Bw4+A23+A24+A32 dictionaries shipped with the package. Than they are
    transformed to counts under \code{inheritance_model} of choice
    (see \code{\link{hlaToVariable}} and \code{\link{hlaCallsToCounts}} for
    more details).
  }
  \item{\code{kir_genes}}{
    \code{kir_counts} data frame is joined with other inputs.
  }
  \item{\code{hla_kir_interactions}}{
    \code{hla_calls} are processed with \code{kir_counts} into HLA - KIR
    interactions variables (see \code{\link{getHlaKirInteractions}} for more
    details).
  }
  \item{\code{hla_grantham_dist}}{
    Distances between Class I alleles are calculated using Grantham distance,
    as implemented in \code{hlaCallsGranthamDistance} function. Additionally
    average distance in Class I genese is calculated.
  }
  \item{\code{custom}}{
    No data transformation is done. All inputs are joined together.
  }
}
}
\examples{
hla_calls_file <- system.file("extdata", "HLAHD_output_example.txt", package = "MiDAS")
hla_calls <- readHlaCalls(hla_calls_file)
pheno_file <- system.file("extdata", "pheno_example.txt", package = "MiDAS")
pheno <- read.table(pheno_file, header = TRUE)
covar_file <- system.file("extdata", "covar_example.txt", package = "MiDAS")
covar <- read.table(covar_file, header = TRUE)
prepareMiDAS(hla_calls, pheno, covar, analysis_type = "expression_level")

}
\seealso{
Other MiDAS statistical functions: \code{\link{analyzeAssociations}},
  \code{\link{analyzeConditionalAssociations}},
  \code{\link{runMiDAS}}
}
\concept{MiDAS statistical functions}
