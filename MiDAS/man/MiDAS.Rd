% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MiDAS_stats.R
\name{MiDAS}
\alias{MiDAS}
\title{Transform and analyze MiDAS data set}
\usage{
MiDAS(model, midas_results = NULL, hla_calls = NULL, ...,
  kir_counts = NULL, analysis_type = c("hla_allele", "aa_level",
  "expression_level", "allele_g_group", "allele_supertype", "allele_group",
  "kir_genes", "hla_kir_interactions"), inheritance_model = "additive",
  indels = TRUE, unkchar = FALSE, conditional = FALSE,
  variables = NULL, lower_frequency_cutoff = NULL,
  upper_frequency_cutoff = NULL, pvalue_cutoff = NULL,
  correction = "BH", logistic = NULL, binary_phenotype = NULL,
  th = 0.05, rss_th = 1e-07, kable_output = TRUE,
  format = getOption("knitr.table.format"))
}
\arguments{
\item{model}{Call specifying statistical model function to use. Should
specify at least function name and \code{formula}. See examples.}

\item{midas_results}{Object of class \code{MiDAS} such as one returned by
\link{MiDAS} function.}

\item{hla_calls}{Data frame containing HLA allele calls, as return by
\code{\link{readHlaCalls}} function.}

\item{...}{Data frames holding additional variables like phenotypic
observations or covariates.}

\item{kir_counts}{Data frame holding counts with KIR genes counts. Required
for \code{"kir_genes"} analysis type.}

\item{analysis_type}{String indicating the type of analysis being performed,
at this point it is only used for results formatting. Valid values are
\code{"hla_allele"}, \code{"aa_level"}, \code{"expression_level"},
\code{"allele_g_group"}, \code{"allele_supertype"}, \code{"allele_group"},
\code{"kir_genes"}, \code{"hla_kir_interactions"}.}

\item{inheritance_model}{String specifying inheritance model to use.
Available choices are \code{"dominant"}, \code{"recessive"},
\code{"additive"}. In \code{"dominant"} model homozygotes and heterozygotes
are coded as \code{1}. In \code{"recessive"} model homozygotes are coded as
\code{1} and all other as \code{0}. In \code{"additive"} model homozygotes
are coded as \code{2} and heterozygotes as \code{1}.}

\item{indels}{Logical indicating whether indels should be considered as
variability.}

\item{unkchar}{Logical indicating whether unknown characters in the alignment
should be treated as variability.}

\item{conditional}{Logical indicating if the analysis should be performed
using stepwise conditional tests or not. See
\link{analyzeConditionalAssociations} for more details.}

\item{variables}{Character specifying variables to use in association tests
or \code{NULL}. If \code{NULL} variables are chosen based on
\code{analysis_type}.}

\item{lower_frequency_cutoff}{Number specifying lower threshold for inclusion
of a variable. If it's a number between 0 and 1 variables with frequency
below this number will not be considered during analysis. If it's greater
or equal 1 variables with number of counts less that this will not be
considered during analysis.}

\item{upper_frequency_cutoff}{Number specifying upper threshold for inclusion
of a variable. If it's a number between 0 and 1 variables with frequency
above this number will not be considered during analysis. If it's greater
or equal 1 variables with number of counts greater that this will not be
considered during analysis.}

\item{pvalue_cutoff}{Number specifying p-value cutoff for results to be
included in output. If \code{NULL} cutoff of \code{0.05} on
\code{p.adjusted} value is used instead.}

\item{correction}{String specifying multiple testing correction method. See
details for further information.}

\item{logistic}{Logical indicating if statistical model used is logistic (eg.
\code{coxph}). If \code{NULL} function will try to figure this out. This is
only used for results formatting.}

\item{binary_phenotype}{Logical indicating if coefficient estimates should be
exponentiated. This is typical for logistic and multinomial regressions,
but a bad idea if there is no log or logit link. If \code{NULL} function
will try to figure this out by testing if response is binary (\code{0} or
\code{1}).}

\item{th}{number specifying p-value threshold for a variable to be considered
significant.}

\item{rss_th}{number specifying residual sum of squares threshold at which
function should stop adding additional variables. As the residual sum of
squares approaches \code{0} the perfect fit is obtained making further
attempts at variables selection nonsense, thus function is stopped. This
behavior can be controlled using \code{rss_th}.}

\item{kable_output}{Logical indicating if additionally results should be
  pretty printed in specified \code{format}.

\code{variables} takes \code{NULL} as a default value, variables labeled with
specified \code{analysis_type} are used in association tests.

\code{correction} specifies p-value adjustment method to use, common choice
is Benjamini & Hochberg (1995) (\code{"BH"}). Internally this is passed to
\link[stats]{p.adjust}. Check there to get more details.}

\item{format}{A character string. Possible values are \code{"latex"} and
\code{"html"}.}
}
\value{
Results for all tested variables contained in object of class
  \code{MiDAS} that inherits from \code{tibble}. It behaves as ordinary
  \code{tibble}, but additionally stores \code{hla_calls}, \code{midas_data}
  and \code{call} under corresponding attributes.
}
\description{
\code{MiDAS} combines the functionality of \link{prepareMiDASData} and
\link{analyzeMiDASData} functions.
}
\examples{
library(survival)

# load raw data
hla_calls_file <- system.file("extdata", "HLAHD_output_example.txt", package = "MiDAS")
hla_calls <- readHlaCalls(hla_calls_file)
pheno_file <- system.file("extdata", "pheno_example.txt", package = "MiDAS")
pheno <- read.table(pheno_file, header = TRUE)
covar_file <- system.file("extdata", "covar_example.txt", package = "MiDAS")
covar <- read.table(covar_file, header = TRUE)

# MiDAS perform two actions; transform data to specified type and evaluate
# statistical model for given analysis type or variables.
# Once transformed data can be reused...

# transform data to HLA allele and HLA expression levels
# calculate results on HLA allele level
midas_results <- MiDAS(model = coxph(Surv(OS, OS_DIED) ~ AGE + SEX),
                       hla_calls = hla_calls,
                       pheno = pheno,
                       covar = covar,
                       analysis_type =  c("hla_allele", "expression_level"),
                       inheritance_model = "additive"
)

# reuse previously transformed data
# calculate results on HLA expression level
midas_results <- MiDAS(model = coxph(Surv(OS, OS_DIED) ~ AGE + SEX),
                       midas_results = midas_results,
                       pheno = pheno,
                       covar = covar,
                       analysis_type =  "expression_level",
                       inheritance_model = "additive"
)

}
