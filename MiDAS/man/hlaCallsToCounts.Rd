% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MiDAS_transformationFunctions.R
\name{hlaCallsToCounts}
\alias{hlaCallsToCounts}
\title{Transform HLA calls to counts table}
\usage{
hlaCallsToCounts(hla_calls, inheritance_model = c("dominant",
  "recessive", "additive"), check_hla_format = TRUE)
}
\arguments{
\item{hla_calls}{Data frame containing HLA allele calls, as return by
\code{\link{readHlaCalls}} function.}

\item{inheritance_model}{String specifying inheritance model to use.
Available choices are \code{"dominant"}, \code{"recessive"},
\code{"additive"}. In \code{"dominant"} model homozygotes and heterozygotes
are coded as \code{1}. In \code{"recessive"} model homozygotes are coded as
\code{1} and all other as \code{0}. In \code{"additive"} model homozygotes
are coded as \code{2} and heterozygotes as \code{1}.}

\item{check_hla_format}{Logical indicating if \code{hla_calls} format should
be checked. This is useful if one wants to use \code{hlaCallsToCounts} with
input not adhering to HLA nomenclature standards. See examples.}
}
\value{
Data frame containing counts of HLA alleles according to specified
  inheritance model.
}
\description{
\code{hlaCallsToCounts} convert HLA calls data frame into counts table.
}
\examples{
file <- system.file("extdata", "HLAHD_output_example.txt", package = "MiDAS")
hla_calls <- readHlaCalls(file)
hlaCallsToCounts(hla_calls, inheritance_model = "additive")

# usage with non-HLA alleles numbers input
hla_vars <- hlaToVariable(hla_calls, dictionary = "allele_HLA_supertype")
hlaCallsToCounts(hla_calls, inheritance_model = "additive", check_hla_format = FALSE)

}
