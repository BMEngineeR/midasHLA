% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MiDAS_stats.R
\name{prepareMiDASData}
\alias{prepareMiDASData}
\title{Prepare HLA calls data for statistical analysis}
\usage{
prepareMiDASData(hla_calls, ..., analysis_type = c("hla_allele",
  "aa_level", "expression_levels", "allele_g_group", "allele_supertypes",
  "allele_groups", "custom"), inheritance_model = "additive",
  indels = TRUE, unkchar = FALSE)
}
\arguments{
\item{hla_calls}{Data frame containing HLA allele calls, as return by
\code{\link{readHlaCalls}} function.}

\item{...}{Data frames holding additional variables like phenotypic
observations or covariates.}

\item{analysis_type}{String indicating analysis type for which data should be
  prepared. Valid choices are \code{"hla_allele"}, \code{"aa_level"},
  \code{"expression_levels"}, \code{"allele_groups"}, \code{"custom"}. See
  details for further explanations.

\code{...} should be data frames with first column holding samples IDs and
named \code{ID}. Those should correspond to \code{ID} column in
\code{hla_calls}.

\code{analysis_type} specifies type of analysis for which \code{hla_calls}
should be prepared:

\code{"hla_allele"} - \code{hla_calls} are transformed into counts  under
\code{inheritance_model} of choice (this is done with
\link{hlaCallsToCounts}).

\code{"aa_level"} - \code{hla_calls} are first converted to amino acid level,
taking only variable positions under consideration. Than variable amino acid
positions are transformed to counts under \code{inheritance_model} of choice
(this is done with \link{aaVariationToCounts}).

\code{"expression_levels"} - \code{hla_calls} are transformed to expression
levels using expression dictionaries shipped with package (this is done using
\link{hlaToVariable}). The expression levels from both alleles are than
summed into single variable for each translated HLA gene.

\code{"allele_g_group"} - \code{hla_calls} are transformed to HLA alleles
groups using G group dictionary shipped with package (this is done using
\link{hlaToVariable}). Than those are transformed to counts under
\code{inheritance_model} of choice (this is done with
\link{hlaCallsToCounts}).

\code{"allele_supertypes"} - \code{hla_calls} are transformed to HLA alleles
groups using supertypes dictionary shipped with package (this is done using
\link{hlaToVariable}). Than those are transformed to counts under
\code{inheritance_model} of choice (this is done with
\link{hlaCallsToCounts}).

\code{"allele_groups"} - \code{hla_calls} are transformed to HLA alleles
groups using Bw4/6 and C1/2 groups dictionaries shipped with package (this is
done using \link{hlaToVariable}). Than those are transformed to counts under
\code{inheritance_model} of choice (this is done with
\link{hlaCallsToCounts}).

\code{"custom"} - will not transform \code{hla_calls} and only joins it with
additional data(\code{...}).}

\item{inheritance_model}{String specifying inheritance model to use.
Available choices are \code{"dominant"}, \code{"recessive"},
\code{"additive"}. In \code{"dominant"} model homozygotes and heterozygotes
are coded as \code{1}. In \code{"recessive"} model homozygotes are coded as
\code{1} and all other as \code{0}. In \code{"additive"} model homozygotes
are coded as \code{2} and heterozygotes as \code{1}.}

\item{indels}{Logical indicating whether indels should be considered as
variability.}

\item{unkchar}{Logical indicating whether unknown characters in the alignment
should be treated as variability.}
}
\value{
Data frame containing prepared data.
}
\description{
\code{prepareMiDASData} transform HLA alleles calls according to selected
analysis type and joins obtained transformation with additional data frames
like phenotypic observations or covariates, creating an input data for
further statistical analysis.
}
\examples{
hla_calls_file <- system.file("extdata", "HLAHD_output_example.txt", package = "MiDAS")
hla_calls <- readHlaCalls(hla_calls_file)
pheno_file <- system.file("extdata", "pheno_example.txt", package = "MiDAS")
pheno <- read.table(pheno_file, header = TRUE)
covar_file <- system.file("extdata", "covar_example.txt", package = "MiDAS")
covar <- read.table(covar_file, header = TRUE)
prepareMiDASData(hla_calls, pheno, covar, analysis_type = "expression_levels")

}
